name: Deploy to VPS (Docker)

on:
  push:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create deployment package
      run: |
        tar -czf deployment.tar.gz Dockerfile nginx.conf churras-app.yaml package*.json src/ public/ index.html vite.config.ts tailwind.config.ts tsconfig*.json components.json

    - name: Deploy to VPS via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          # Criar diret√≥rio se n√£o existir
          mkdir -p /opt/churras-app
          cd /opt/churras-app
          
          # Fazer backup da vers√£o atual (se existir)
          if [ -d "current" ]; then
            rm -rf backup 2>/dev/null || true
            mv current backup
          fi
          
          # Criar nova vers√£o
          mkdir current
          cd current

    - name: Transfer files
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        source: "deployment.tar.gz"
        target: "/opt/churras-app/current"

    - name: Deploy Docker container
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /opt/churras-app/current
          
          # Extrair arquivos
          tar -xzf deployment.tar.gz
          rm deployment.tar.gz
          
          # Build da imagem Docker
          docker build -t churras-kit-pro:latest .
          
          # Deploy usando Docker Stack (Swarm)
          docker stack deploy -c churras-app.yaml churras-stack
          
          # Aguardar deploy
          echo "‚è≥ Aguardando deploy..."
          sleep 10
          
          # Verificar status
          docker service ls | grep churras
          
          echo "‚úÖ Deploy Docker realizado com sucesso!"

    - name: Cleanup and notify
      if: always()
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /opt/churras-app
          
          # Limpar imagens n√£o utilizadas
          docker image prune -f
          
          # Status final
          echo "üìä Status dos servi√ßos:"
          docker service ls | grep churras || echo "Nenhum servi√ßo churras encontrado"
          
          if [ "${{ job.status }}" == "success" ]; then
            echo "üéâ Deploy realizado com sucesso!"
          else
            echo "‚ùå Falha no deploy - verificar logs"
          fi
